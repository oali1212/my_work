library ieee ;
use ieee.std_logic_1164.all ;
use ieee.std_LOGIC_UNSIGNED.ALL ; 
USE IEEE.NUMERIC_STD.ALL  ; 


entity pedge_detector is 
port( level,rst,clk: in std_logic ; 
tick : out std_logic ) ; 
end pedge_detector ; 


architecture beh of pedge_detector is  
type state_type is (one,zero,edge) ;
signal current_state, next_state : state_type ; 
begin 

--state reg started 

process(clk,rst) 
begin 

if(rst='1') then 
current_state<=zero ;  
 elsif(clk'event and clk='1')  then 
current_state<=next_state ; 
end if ; 

end process; 
----
process(level,current_state,next_state) -- 
begin 

if(current_state=zero)  then 

if(level='1') then 
next_state<=edge ; 
else 
next_state<=zero ; 
end if ; 

elsif(current_state=edge) then 
if(level='1') then 
next_state<=one ; 
else 
next_state<=zero ; 
end if ; 

else 
if(level='1') then 
next_state<=one ; 
else 
next_state<=zero ;
end if ; 

end if ; 

end process  ; 

process(level,current_state,next_state) 
begin
if(current_state=edge) then 
tick<='0' ; 
else 
tick<='0' ;
end if ; 
end process ; 


end beh ;





